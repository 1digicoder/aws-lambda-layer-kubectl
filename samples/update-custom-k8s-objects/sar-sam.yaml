AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  AWS::ServerlessRepo::Application:
    Name: eks-kubectl-apply
    Description: "This Lambda function `kubectl apply -f` to update kubernetes objects for you"
    Author: Pahud Hsieh
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['eks','kubectl','kubernetes','hook']
    HomePageUrl: https://github.com/aws-samples/aws-lambda-layer-kubectl/tree/master/samples/update-custom-k8s-objects
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/aws-samples/aws-lambda-layer-kubectl/tree/master/samples/update-custom-k8s-objects
    
Parameters:
  ClusterName:
    Type: String
    Default: default
  FunctionName:
    Type: String
    Default: defaultFunc
  NodeInstanceRoleArn:
    Type: String
  LambdaRoleArn:
    Type: String
  LambdaLayerKubectlArn:
    Type: String
    # Default: arn:aws:lambda:ap-northeast-1:${AWS::AccountId}:layer:layer-eks-kubectl-layer-stack:2
  # K8sResourceUrls:
  #   Type: String
  #   Default: https://raw.githubusercontent.com/pahud/amazon-eks-workshop/master/03-creating-services/01-nginx-svc-clusterip.yaml
    
    

Transform: AWS::Serverless-2016-10-31
Description: Amazon EKS ConfigMap update handler
Resources:
  Func:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      # FunctionName: !Sub "${FunctionName}-${AWS::StackName}"
      Handler: main
      CodeUri: ./func.d
      Runtime: provided
      Layers:
        - !Ref LambdaLayerKubectlArn
      MemorySize: 512
      Environment:
        Variables:
          cluster_name: !Ref ClusterName
          iam_role_arn: !Ref NodeInstanceRoleArn
          aws_account_id: !Sub "${AWS::AccountId}"
          lambda_role_arn: !Ref LambdaRoleArn
          # k8s_resouce_urls: !Ref K8sResourceUrls
      # Policies: 
      #   - AWSLambdaBasicExecutionRole
      # Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaEKSAdminRole"
      Role: !Ref LambdaRoleArn
      Timeout: 10

  WebServices:
    Type: Custom::KubernetesResource
    Properties:
      ServiceToken: !GetAtt Func.Arn
      Objects:
        # nginx service
        - https://gist.githubusercontent.com/pahud/54906d24e7889a0adaed72ce4d4baefe/raw/680659932542f5b155fa0f4d2590896729784045/nginx.yaml
        # caddy service
        - https://gist.githubusercontent.com/pahud/54906d24e7889a0adaed72ce4d4baefe/raw/680659932542f5b155fa0f4d2590896729784045/caddy.yaml

Outputs:
  LambdaFuncArn:
    Description: Lambda Func ARN
    Value: !GetAtt Func.Arn
  LambdaFuncName:
    Description: Lambda Func Name
    Value: !Ref Func
  LambdaRoleArn:
    Description: Lambda Role ARN
    Value: !Ref LambdaRoleArn
    # Value: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaEKSAdminRole"
  # ResultData:
  #   Description: response of the custom resource
  #   Value: !GetAtt UpdateCM.Result
      
      
